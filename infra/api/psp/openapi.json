{
  "openapi": "3.0.1",
  "tags": [
    {
      "name": "Info",
      "description": "Info operations"
    },
    {
      "name": "Internal Operations",
      "description": "APIs for internal operations, used for hidden processes in FdR ecosystem"
    },
    {
      "name": "Organizations",
      "description": "APIs for creditor institution, used for inspection of generated flows"
    },
    {
      "name": "PSP",
      "description": "APIs for payment service providers, used for creation and inspection of flows"
    },
    {
      "name": "Support",
      "description": "APIs for technical support, used for troubleshooting operations"
    }
  ],
  "components": {
    "schemas": {
      "AddPaymentRequest": {
        "type": "object",
        "required": [
          "payments"
        ],
        "properties": {
          "payments": {
            "type": "array",
            "maxItems": 1000,
            "minItems": 1,
            "items": {
              "$ref": "#/components/schemas/Payment"
            },
            "description": "The list of payments to be added on the draft flow"
          }
        }
      },
      "CreateFlowRequest": {
        "type": "object",
        "required": [
          "fdr",
          "fdrDate",
          "sender",
          "receiver",
          "regulation",
          "regulationDate",
          "totPayments",
          "sumPayments"
        ],
        "properties": {
          "fdr": {
            "type": "string",
            "example": [
              "2016-08-16pspTest-1178"
            ],
            "pattern": "[a-zA-Z0-9\\-_]{1,35}",
            "description": "The value of the flow identifier.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[NodoInviaFlussoRendicontazione.identificativoFlusso]</b>."
          },
          "fdrDate": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:20:30.800000Z"
            ],
            "description": "The date related to the flow reporting.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[NodoInviaFlussoRendicontazione.dataOraFlusso]</b>."
          },
          "sender": {
            "$ref": "#/components/schemas/Sender",
            "type": "object",
            "description": "The information related to the entity that will compile and send the published flow."
          },
          "receiver": {
            "$ref": "#/components/schemas/Receiver",
            "type": "object",
            "description": "The information related to the entity that will receive the published flow."
          },
          "regulation": {
            "type": "string",
            "example": [
              "SEPA - Bonifico X"
            ],
            "pattern": "^(.{1,35})$",
            "description": "The description related to the regulation payment related to the flow.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.identificativoUnivocoRegolamento]</b>."
          },
          "regulationDate": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2023-04-03T12:00:30.900000Z"
            ],
            "description": "The date of the regulation payment related to the flow.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.dataRegolamento]</b>."
          },
          "bicCodePouringBank": {
            "type": "string",
            "example": [
              "UNCRITMMXXX"
            ],
            "pattern": "^(.{1,35})$",
            "description": "The BIC code of the bank where the regulation payment related to the flow will be poured.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.codiceBicBancaDiRiversamento]</b>."
          },
          "totPayments": {
            "type": "integer",
            "format": "int64",
            "example": [
              1
            ],
            "description": "The total number of payments to be included in the flow during the flow compilation.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.numeroTotalePagamenti]</b>.",
            "minimum": 1
          },
          "sumPayments": {
            "type": "number",
            "format": "double",
            "example": [
              0.01
            ],
            "pattern": "^\\d{1,2147483647}([.]\\d{1,2})?$",
            "description": "The total amount of payments to be calculated in the flow during the flow compilation.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.importoTotalePagamenti]</b>."
          }
        }
      },
      "DeletePaymentRequest": {
        "type": "object",
        "required": [
          "indexList"
        ],
        "properties": {
          "indexList": {
            "type": "array",
            "maxItems": 1000,
            "minItems": 1,
            "items": {
              "type": "integer",
              "format": "int64"
            },
            "description": "The list of payments indexes to be removed on the draft flow"
          }
        }
      },
      "ErrorMessage": {
        "type": "object",
        "properties": {
          "path": {
            "type": "string",
            "example": [
              "detail.path.if-exist"
            ],
            "description": "The path reference for the specific error clause in the general response."
          },
          "message": {
            "type": "string",
            "example": [
              "An unexpected error has occurred. Please contact support."
            ],
            "description": "The descriptive message for the specific error clause in the general response."
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "errorId": {
            "type": "string",
            "example": [
              "50905466-1881-457b-b42f-fb7b2bfb1610"
            ],
            "description": "The unique identifier that can be used for tracking request and error response."
          },
          "httpStatusCode": {
            "type": "integer",
            "format": "int32",
            "example": [
              500
            ],
            "description": "The HTTP status code related to the error message."
          },
          "httpStatusDescription": {
            "type": "string",
            "example": [
              "Internal Server Error"
            ],
            "description": "The descriptive name of the HTTP status code."
          },
          "appErrorCode": {
            "type": "string",
            "example": [
              "FDR-0500"
            ],
            "description": "The operational error code related to the error response"
          },
          "errors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ErrorMessage"
            },
            "description": "The list of specific errors to show for the error response."
          }
        }
      },
      "FlowByCICreated": {
        "type": "object",
        "properties": {
          "fdr": {
            "type": "string",
            "example": [
              "2025-01-0188888888888-0000001"
            ],
            "description": "The unique identifier of the flow."
          },
          "organizationId": {
            "type": "string",
            "example": [
              "77777777777"
            ],
            "description": "The domain identifier of the creditor institution related to the flow."
          },
          "revision": {
            "type": "integer",
            "format": "int64",
            "example": [
              1
            ],
            "description": "The revision (or version) of the flow."
          },
          "created": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:00:30.900000Z"
            ],
            "description": "The date and time on which the flow is created."
          }
        }
      },
      "FlowByCIPublished": {
        "type": "object",
        "properties": {
          "fdr": {
            "type": "string",
            "example": [
              "2025-01-0188888888888-0000001"
            ],
            "description": "The unique identifier of the flow."
          },
          "organizationId": {
            "type": "string",
            "example": [
              "77777777777"
            ],
            "description": "The domain identifier of the creditor institution related to the flow."
          },
          "revision": {
            "type": "integer",
            "format": "int64",
            "example": [
              1
            ],
            "description": "The revision (or version) of the flow."
          },
          "published": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:00:30.900000Z"
            ],
            "description": "The date and time on which the flow is published."
          }
        }
      },
      "FlowByPSP": {
        "type": "object",
        "properties": {
          "fdr": {
            "type": "string",
            "example": [
              "2025-01-0188888888888-0000001"
            ],
            "description": "The unique identifier of the flow."
          },
          "pspId": {
            "type": "string",
            "example": [
              "88888888888"
            ],
            "description": "The domain identifier of the PSP related to the flow."
          },
          "revision": {
            "type": "integer",
            "format": "int64",
            "example": [
              1
            ],
            "description": "The revision (or version) of the flow."
          },
          "published": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:00:30.900000Z"
            ],
            "description": "The date and time on which the flow is published."
          },
          "flowDate": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:00:30.900000Z"
            ],
            "description": "The date and time on which the flow was created by the PSP."
          }
        }
      },
      "FlowBySenderAndReceiver": {
        "type": "object",
        "properties": {
          "pspId": {
            "type": "string",
            "example": [
              "88888888888"
            ],
            "description": "The domain identifier of the PSP related to the flow."
          },
          "organizationId": {
            "type": "string",
            "example": [
              "77777777777"
            ],
            "description": "The domain identifier of the creditor institution related to the flow."
          },
          "fdr": {
            "type": "string",
            "example": [
              "2025-01-0188888888888-0000001"
            ],
            "description": "The unique identifier of the flow."
          },
          "revision": {
            "type": "integer",
            "format": "int64",
            "example": [
              1
            ],
            "description": "The revision (or version) of the flow."
          },
          "created": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:00:30.900000Z"
            ],
            "description": "The date and time on which the flow is created."
          }
        }
      },
      "GenericResponse": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "example": [
              "Success"
            ],
            "description": "The descriptive information that shows a message related to the executed operation."
          }
        }
      },
      "InfoResponse": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": [
              "pagopa-fdr"
            ],
            "description": "The identificative name of the deployed application"
          },
          "version": {
            "type": "string",
            "example": [
              "1.2.3"
            ],
            "description": "The current version of the deployed application"
          },
          "environment": {
            "type": "string",
            "example": [
              "dev"
            ],
            "description": "The current environment where the application is deployed"
          },
          "description": {
            "type": "string",
            "example": [
              "FDR - Flussi di rendicontazione"
            ],
            "description": "The descriptive information related to the info response"
          }
        }
      },
      "Instant": {
        "type": "string",
        "format": "date-time"
      },
      "Metadata": {
        "type": "object",
        "properties": {
          "pageSize": {
            "type": "integer",
            "format": "int32",
            "example": [
              25
            ],
            "description": "The size of the current page shown in response"
          },
          "pageNumber": {
            "type": "integer",
            "format": "int32",
            "example": [
              1
            ],
            "description": "The index of the current page shown in response"
          },
          "totPage": {
            "type": "integer",
            "format": "int32",
            "example": [
              3
            ],
            "description": "The total number of the pages that can be retrieved in order to show all elements."
          }
        }
      },
      "PaginatedFlowsBySenderAndReceiverResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/Metadata",
            "type": "object",
            "description": "The metadata related to the paginated response."
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "example": [
              100
            ],
            "description": "The number of elements that can be found in this page."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowBySenderAndReceiver"
            },
            "description": "The list of flows that are included in this page."
          }
        }
      },
      "PaginatedFlowsCreatedResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/Metadata",
            "type": "object",
            "description": "The metadata related to the paginated response."
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "example": [
              100
            ],
            "description": "The number of elements that can be found in this page."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowByCICreated"
            },
            "description": "The list of flows that are included in this page."
          }
        }
      },
      "PaginatedFlowsPublishedResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/Metadata",
            "type": "object",
            "description": "The metadata related to the paginated response."
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "example": [
              100
            ],
            "description": "The number of elements that can be found in this page."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowByCIPublished"
            },
            "description": "The list of flows that are included in this page."
          }
        }
      },
      "PaginatedFlowsResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/Metadata",
            "type": "object",
            "description": "The metadata related to the paginated response."
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "example": [
              100
            ],
            "description": "The number of elements that can be found in this page."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FlowByPSP"
            },
            "description": "The list of flows that are included in this page."
          }
        }
      },
      "PaginatedPaymentsResponse": {
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/Metadata",
            "type": "object",
            "description": "The metadata related to the paginated response."
          },
          "count": {
            "type": "integer",
            "format": "int64",
            "example": [
              100
            ],
            "description": "The number of elements that can be found in this page."
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Payment"
            },
            "description": "The list of payments that are included in this page."
          }
        }
      },
      "Payment": {
        "type": "object",
        "required": [
          "index",
          "iuv",
          "iur",
          "idTransfer",
          "pay",
          "payStatus",
          "payDate"
        ],
        "properties": {
          "index": {
            "type": "integer",
            "format": "int64",
            "example": [
              1
            ],
            "description": "Unique index of the payment in the flow",
            "minimum": 1
          },
          "iuv": {
            "type": "string",
            "example": [
              "17854456582215"
            ],
            "pattern": "^(.{1,35})$",
            "description": "The value of the 'Identificativo Univoco Versamento' code related to the payment.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.datiSingoliPagamenti.identificativoUnivocoVersamento]</b>."
          },
          "iur": {
            "type": "string",
            "example": [
              "3354426511008"
            ],
            "pattern": "^(.{1,35})$",
            "description": "The value of the 'Identificativo Univoco Riscossione' code related to the payment in the flow.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.datiSingoliPagamenti.identificativoUnivocoRiscossione]</b>."
          },
          "idTransfer": {
            "type": "integer",
            "format": "int64",
            "example": [
              1
            ],
            "description": "The value of the transfer identifier related to the payment during the payment process.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.datiSingoliPagamenti.indiceDatiSingoloPagamento]</b>.",
            "maximum": 5,
            "minimum": 1
          },
          "pay": {
            "type": "number",
            "format": "double",
            "example": [
              0.01
            ],
            "pattern": "^\\d{1,2147483647}([.]\\d{1,2})?$",
            "description": "The value of the payment amount in decimal euro.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.datiSingoliPagamenti.singoloImportoPagato]</b>."
          },
          "payStatus": {
            "type": "string",
            "enum": [
              "EXECUTED",
              "REVOKED",
              "STAND_IN",
              "STAND_IN_NO_RPT",
              "NO_RPT"
            ],
            "example": [
              "EXECUTED"
            ],
            "description": "The value of the status of the payment in relation to ist completion.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.datiSingoliPagamenti.codiceEsitoSingoloPagamento]</b>.<br>The enumeration is mapped with the following values:<br><ul><li>EXECUTED -> 0</li><li>REVOKED -> 3</li><li>STAND_IN -> 4</li><li>STAND_IN_NO_RPT -> 8</li><li>NO_RPT -> 9</li></ul>"
          },
          "payDate": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:30:50.900000Z"
            ],
            "description": "The value of the date of the payment in relation to its completion.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.datiSingoliPagamenti.dataEsitoSingoloPagamento]</b>."
          }
        }
      },
      "Receiver": {
        "type": "object",
        "required": [
          "id",
          "organizationId",
          "organizationName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "example": [
              "APPBIT2B"
            ],
            "pattern": "^(.{1,35})$",
            "description": "The identifier of the Creditor Institution receiver entity.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.istitutoRicevente.identificativoUnivocoRicevente.codiceIdentificativoUnivoco]</b>."
          },
          "organizationId": {
            "type": "string",
            "example": [
              "20000000001"
            ],
            "pattern": "^(.{1,35})$",
            "description": "The domain identifier of the Creditor Institution receiver entity.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[NodoInviaFlussoRendicontazione.identificativoDominio]</b>."
          },
          "organizationName": {
            "type": "string",
            "example": [
              "Comune di Roma"
            ],
            "pattern": "^(.{1,140})$",
            "description": "The fiscal name of the Creditor Institution receiver entity.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.istitutoRicevente.denominazioneRicevente]</b>."
          }
        }
      },
      "ReportingFlowStatusEnum": {
        "type": "string",
        "enum": [
          "CREATED",
          "INSERTED",
          "PUBLISHED"
        ]
      },
      "Sender": {
        "type": "object",
        "required": [
          "type",
          "id",
          "pspId",
          "pspName",
          "pspBrokerId",
          "channelId"
        ],
        "properties": {
          "type": {
            "$ref": "#/components/schemas/SenderTypeEnum",
            "type": "string",
            "enum": [
              "LEGAL_PERSON",
              "ABI_CODE",
              "BIC_CODE"
            ],
            "example": [
              "LEGAL_PERSON"
            ],
            "description": "The type of the PSP sender entity.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.istitutoMittente.identificativoUnivocoMittente.tipoIdentificativoUnivoco]</b>.The enumeration is mapped with the following values:<br><ul><li>LEGAL_PERSON -> G</li><li>ABI_CODE -> A</li><li>BIC_CODE -> B</li></ul>"
          },
          "id": {
            "type": "string",
            "example": [
              "SELBIT2B"
            ],
            "pattern": "^(.{1,35})$",
            "description": "The identifier of the PSP sender entity.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.istitutoMittente.identificativoUnivocoMittente.codiceIdentificativoUnivoco]</b>."
          },
          "pspId": {
            "type": "string",
            "example": [
              "60000000001"
            ],
            "pattern": "^(.{1,35})$",
            "description": "The domain identifier of the PSP sender entity.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[NodoInviaFlussoRendicontazione.identificativoPSP]</b>."
          },
          "pspName": {
            "type": "string",
            "example": [
              "PSP Name"
            ],
            "pattern": "^(.{3,70})$",
            "description": "The fiscal name of the PSP sender entity.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[FlussoRiversamento.istitutoMittente.denominazioneMittente]</b>."
          },
          "pspBrokerId": {
            "type": "string",
            "example": [
              "70000000001"
            ],
            "pattern": "^(.{1,35})$",
            "description": "The domain identifier of the PSP sender entity's Broker.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[NodoInviaFlussoRendicontazione.identificativoIntermediarioPSP]</b>."
          },
          "channelId": {
            "type": "string",
            "example": [
              "80000000001"
            ],
            "pattern": "^(.{1,35})$",
            "description": "The identifier of the PSP sender entity's Channel.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[NodoInviaFlussoRendicontazione.identificativoCanale]</b>."
          },
          "password": {
            "type": "string",
            "deprecated": true,
            "example": [
              "password"
            ],
            "pattern": "^(\\w{8,15})$",
            "description": "The password of the PSP sender entity's Channel.<br>In the XML request for SOAP primitives, this field is mappable with the tag <b>[NodoInviaFlussoRendicontazione.password]</b>."
          }
        }
      },
      "SenderTypeEnum": {
        "type": "string",
        "enum": [
          "LEGAL_PERSON",
          "ABI_CODE",
          "BIC_CODE"
        ]
      },
      "SingleFlowCreatedResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ReportingFlowStatusEnum",
            "type": "string",
            "example": [
              "CREATED"
            ],
            "description": "The specific status of publication of the flow"
          },
          "revision": {
            "type": "integer",
            "format": "int64",
            "example": [
              4
            ],
            "description": "The revision (or version) of the flow."
          },
          "created": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:00:30.900000Z"
            ],
            "description": "The date and time on which the flow is created."
          },
          "updated": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:10:30.900000Z"
            ],
            "description": "The last date and time on which the flow is updated."
          },
          "fdr": {
            "type": "string",
            "example": [
              "2025-01-0188888888888-0000001"
            ],
            "description": "The unique identifier of the flow."
          },
          "fdrDate": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:20:30.800000Z"
            ],
            "description": "The date related to the flow reporting."
          },
          "regulation": {
            "type": "string",
            "example": [
              "SEPA - Bonifico X"
            ],
            "description": "The description related to the regulation payment related to the flow."
          },
          "regulationDate": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2023-04-03T12:00:30.900000Z"
            ],
            "description": "The date of the regulation payment related to the flow."
          },
          "bicCodePouringBank": {
            "type": "string",
            "example": [
              "UNCRITMMXXX"
            ],
            "description": "The BIC code of the bank where the regulation payment related to the flow will be poured."
          },
          "sender": {
            "$ref": "#/components/schemas/Sender",
            "type": "object",
            "description": "The information related to the entity that will compile and send the published flow."
          },
          "receiver": {
            "$ref": "#/components/schemas/Receiver",
            "type": "object",
            "description": "The information related to the entity that will receive the published flow."
          },
          "computedTotPayments": {
            "type": "integer",
            "format": "int64",
            "example": [
              93
            ],
            "description": "The computed total number of payments included in the flow during the compilation."
          },
          "computedSumPayments": {
            "type": "number",
            "format": "double",
            "example": [
              81.66
            ],
            "description": "The computed total amount of payments calculated in the flow during the compilation."
          },
          "totPayments": {
            "type": "integer",
            "format": "int64",
            "example": [
              100
            ],
            "description": "The total number of payments to be included in the flow during the flow compilation."
          },
          "sumPayments": {
            "type": "number",
            "format": "double",
            "example": [
              100.95
            ],
            "description": "The total amount of payments to be calculated in the flow during the flow compilation."
          }
        }
      },
      "SingleFlowResponse": {
        "type": "object",
        "properties": {
          "status": {
            "$ref": "#/components/schemas/ReportingFlowStatusEnum",
            "type": "string",
            "example": [
              "CREATED"
            ],
            "description": "The specific status of publication of the flow"
          },
          "revision": {
            "type": "integer",
            "format": "int64",
            "example": [
              4
            ],
            "description": "The revision (or version) of the flow."
          },
          "created": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:00:30.900000Z"
            ],
            "description": "The date and time on which the flow is created."
          },
          "updated": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:10:30.900000Z"
            ],
            "description": "The last date and time on which the flow is updated."
          },
          "fdr": {
            "type": "string",
            "example": [
              "2025-01-0188888888888-0000001"
            ],
            "description": "The unique identifier of the flow."
          },
          "fdrDate": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:20:30.800000Z"
            ],
            "description": "The date related to the flow reporting."
          },
          "regulation": {
            "type": "string",
            "example": [
              "SEPA - Bonifico X"
            ],
            "description": "The description related to the regulation payment related to the flow."
          },
          "regulationDate": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2023-04-03T12:00:30.900000Z"
            ],
            "description": "The date of the regulation payment related to the flow."
          },
          "bicCodePouringBank": {
            "type": "string",
            "example": [
              "UNCRITMMXXX"
            ],
            "description": "The BIC code of the bank where the regulation payment related to the flow will be poured."
          },
          "sender": {
            "$ref": "#/components/schemas/Sender",
            "type": "object",
            "description": "The information related to the entity that will compile and send the published flow."
          },
          "receiver": {
            "$ref": "#/components/schemas/Receiver",
            "type": "object",
            "description": "The information related to the entity that will receive the published flow."
          },
          "published": {
            "$ref": "#/components/schemas/Instant",
            "type": "string",
            "example": [
              "2025-01-01T12:20:30.900000Z"
            ],
            "description": "The date and time on which the flow is published."
          },
          "computedTotPayments": {
            "type": "integer",
            "format": "int64",
            "example": [
              100
            ],
            "description": "The computed total number of payments included in the flow during the compilation."
          },
          "computedSumPayments": {
            "type": "number",
            "format": "double",
            "example": [
              100.95
            ],
            "description": "The computed total amount of payments calculated in the flow during the compilation."
          },
          "totPayments": {
            "type": "integer",
            "format": "int64",
            "example": [
              100
            ],
            "description": "The total number of payments to be included in the flow during the flow compilation."
          },
          "sumPayments": {
            "type": "number",
            "format": "double",
            "example": [
              100.95
            ],
            "description": "The total amount of payments to be calculated in the flow during the flow compilation."
          }
        }
      }
    }
  },
  "paths": {
    "/info": {
      "get": {
        "summary": "Health-check",
        "operationId": "IInfoController_healthCheck",
        "tags": [
          "Info"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/InfoResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/psps/{pspId}/created": {
      "get": {
        "summary": "Get all draft flows related to the PSP",
        "operationId": "IPspsController_getAllFlowsNotInPublishedStatus",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "A date to be used as a lower limit search on creation date. In format ISO-8601 (yyyy-MM-dd'T'HH:mm:ss)",
            "example": "2025-01-01T12:00:00Z",
            "name": "createdGt",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Instant"
            }
          },
          {
            "description": "The index of the page to be shown in the result",
            "example": 1,
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "description": "The number of the elements of the page to be shown in the result",
            "example": 50,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1000,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFlowsCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/psps/{pspId}/created/fdrs/{fdr}/organizations/{organizationId}": {
      "get": {
        "summary": "Get single draft flow related to the PSP, searching by name",
        "operationId": "IPspsController_getSingleFlowNotInPublishedStatus",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The flow name, used as a search filter",
            "example": "2025-01-0188888888888-0001",
            "name": "fdr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The creditor institution identifier, used as a search filter",
            "example": "15376371009",
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleFlowCreatedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/psps/{pspId}/created/fdrs/{fdr}/organizations/{organizationId}/payments": {
      "get": {
        "summary": "Get payments of draft flow related to the PSP, searching by name",
        "operationId": "IPspsController_getPaymentsForFlowNotInPublishedStatus",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The flow name, used as a search filter",
            "example": "2025-01-0188888888888-0001",
            "name": "fdr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The creditor institution identifier, used as a search filter",
            "example": "15376371009",
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The index of the page to be shown in the result",
            "example": 1,
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "description": "The number of the elements of the page to be shown in the result",
            "example": 50,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1000,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPaymentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/psps/{pspId}/fdrs/{fdr}": {
      "delete": {
        "summary": "Delete an existing draft flow and all related payments",
        "operationId": "IPspsController_deleteExistingFlow",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The flow name, used as a search filter",
            "example": "2025-01-0188888888888-0001",
            "name": "fdr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create a new flow structure",
        "operationId": "IPspsController_createEmptyFlow",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The flow name, used as a search filter",
            "example": "2025-01-0188888888888-0001",
            "name": "fdr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "pattern": "[a-zA-Z0-9\\-_]{1,35}"
            }
          },
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateFlowRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/psps/{pspId}/fdrs/{fdr}/payments/add": {
      "put": {
        "summary": "Add one or more payments to an existing flow",
        "operationId": "IPspsController_addPaymentToExistingFlow",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The flow name, used as a search filter",
            "example": "2025-01-0188888888888-0001",
            "name": "fdr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/AddPaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/psps/{pspId}/fdrs/{fdr}/payments/del": {
      "put": {
        "summary": "Delete one or more payments from an existing flow",
        "operationId": "IPspsController_deletePaymentFromExistingFlow",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The flow name, used as a search filter",
            "example": "2025-01-0188888888888-0001",
            "name": "fdr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DeletePaymentRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/psps/{pspId}/fdrs/{fdr}/publish": {
      "post": {
        "summary": "Publish an existing flow in draft status",
        "operationId": "IPspsController_publishFlow",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The flow name, used as a search filter",
            "example": "2025-01-0188888888888-0001",
            "name": "fdr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GenericResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/psps/{pspId}/published": {
      "get": {
        "summary": "Get all published flow related to the PSP",
        "operationId": "IPspsController_getAllFlowsInPublishedStatus",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The creditor institution identifier, used as a search filter",
            "example": "15376371009",
            "name": "organizationId",
            "in": "query",
            "schema": {
              "type": "string",
              "pattern": "^(.{1,35})$"
            }
          },
          {
            "description": "The index of the page to be shown in the result",
            "example": 1,
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "description": "A date to be used as a lower limit search on publication date. In format ISO-8601 (yyyy-MM-dd'T'HH:mm:ss)",
            "example": "2025-01-01T12:00:00Z",
            "name": "publishedGt",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/Instant"
            }
          },
          {
            "description": "The number of the elements of the page to be shown in the result",
            "example": 50,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1000,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedFlowsPublishedResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/psps/{pspId}/published/fdrs/{fdr}/revisions/{revision}/organizations/{organizationId}": {
      "get": {
        "summary": "Get single published flow related to the PSP, searching by name and revision",
        "operationId": "IPspsController_getSingleFlowInPublishedStatus",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The flow name, used as a search filter",
            "example": "2025-01-0188888888888-0001",
            "name": "fdr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The creditor institution identifier, used as a search filter",
            "example": "15376371009",
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The specific revision of the flow needed",
            "example": 1,
            "name": "revision",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SingleFlowResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/psps/{pspId}/published/fdrs/{fdr}/revisions/{revision}/organizations/{organizationId}/payments": {
      "get": {
        "summary": "Get payments of published flow related to the PSP, searching by name and revision",
        "operationId": "IPspsController_getPaymentsForFlowInPublishedStatus",
        "tags": [
          "PSP"
        ],
        "parameters": [
          {
            "description": "The flow name, used as a search filter",
            "example": "2025-01-0188888888888-0001",
            "name": "fdr",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The creditor institution identifier, used as a search filter",
            "example": "15376371009",
            "name": "organizationId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The PSP identifier, used as a search filter",
            "example": "88888888888",
            "name": "pspId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The specific revision of the flow needed",
            "example": 1,
            "name": "revision",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "description": "The index of the page to be shown in the result",
            "example": 1,
            "name": "page",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1,
              "minimum": 1
            }
          },
          {
            "description": "The number of the elements of the page to be shown in the result",
            "example": 50,
            "name": "size",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64",
              "default": 1000,
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedPaymentsResponse"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 400,
                  "httpStatusDescription": "Bad Request",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "path": "<detail.path.if-exist>",
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "application/json": {
                "example": {
                  "httpStatusCode": 404,
                  "httpStatusDescription": "Not Found",
                  "appErrorCode": "FDR-XXXX",
                  "errors": [
                    {
                      "message": "<detail.message>"
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "500": {
            "description": "Internal Server Error",
            "content": {
              "application/json": {
                "example": {
                  "errorId": "50905466-1881-457b-b42f-fb7b2bfb1610",
                  "httpStatusCode": 500,
                  "httpStatusDescription": "Internal Server Error",
                  "appErrorCode": "FDR-0500",
                  "errors": [
                    {
                      "message": "An unexpected error has occurred. Please contact support."
                    }
                  ]
                },
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "info": {
    "title": "FDR - Flussi di Rendicontazione",
    "termsOfService": "https://www.pagopa.gov.it/",
    "version": "1.1.51-1-fix-interfaces"
  },
  "servers": [
    {
      "url": "${host}",
      "description": "Environment host"
    },
    {
      "url": "http://localhost:8080/",
      "description": "Localhost"
    }
  ]
}
