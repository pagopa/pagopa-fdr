version: '3.8'

services:
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.6.2@sha256:1c53c89d04f207beb99d56cc4a1cc23516bd9c386858843d5082a98257c04d1c
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
      discovery.type: "single-node"
      xpack.security.enabled: false
      xpack.security.enrollment.enabled: false
    networks:
      - infra

  kibana:
    image: docker.elastic.co/kibana/kibana:8.6.2@sha256:7157c399f97acddf3297501d5af66097d57be67d27d62f810bcbdd11785a39b8
    ports:
      - "5601:5601"
    networks:
      - infra
    depends_on:
      - elasticsearch

  alertmanager:
    hostname: alertmanager
    image: prom/alertmanager@sha256:e13b6ed5cb929eeaee733479dce55e10eb3bc2e9c4586c705a4e8da41e5eacf5
    volumes:
      - ${PWD}/alertmanager/alertmanager.conf:/etc/alertmanager/alertmanager.conf
    command:
      - '--config.file=/etc/alertmanager/alertmanager.conf'
    ports:
      - 9093:9093
    networks:
      - infra

  prometheus:
    hostname: prometheus
    image: prom/prometheus@sha256:378f4e03703557d1c6419e6caccf922f96e6d88a530f7431d66a4c4f4b1000fe
    volumes:
      - ${PWD}/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
      - ${PWD}/prometheus/alert_rules.yml:/etc/prometheus/alert_rules.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    links:
      - alertmanager:alertmanager
    ports:
      - 9090:9090
    networks:
      - infra

  grafana:
    hostname: grafana
    image: grafana/grafana@sha256:a0f881232a6fb71a0554a47d0fe2203b6888fe77f4cefb7ea62bed7eb54e13c3
    volumes:
      - ${PWD}/grafana/grafana_datasources.yml:/etc/grafana/provisioning/datasources/all.yaml
      - ${PWD}/grafana/grafana_config.ini:/etc/grafana/config.ini
      - grafana_data:/var/lib/grafana
    ports:
      - 3000:3000
    networks:
      - infra

  jaeger-all-in-one:
    image: jaegertracing/all-in-one:latest@sha256:836e9b69c88afbedf7683ea7162e179de63b1f981662e83f5ebb68badadc710f
    ports:
      - "16686:16686"
      - "14268:14268"
      - "14250:14250"
    networks:
      - infra

  otel-collector:
    image: otel/opentelemetry-collector:latest@sha256:fae9574bf0ec85703fcdfb198442b03141687924c9aea47e12fe307b659190a2
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    volumes:
      - ${PWD}/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml:Z
    ports:
      - "13133:13133" # Health_check extension
      - "4317:4317"   # OTLP gRPC receiver
    depends_on:
      - jaeger-all-in-one
    networks:
      - infra

  mongo:
    image: mongo@sha256:3984cf5a234e525253619060fcbff12449db0597d62a6d4e18991a18f2365c36
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    ports:
      - 27017:27017
    networks:
      - infra

  mongo-express:
    image: mongo-express@sha256:1b23d7976f0210dbec74045c209e52fbb26d29b2e873d6c6fa3d3f0ae32c2a64
    restart: always
    ports:
      - 8085:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongo:27017/
    networks:
      - infra

  azurite:
    image: "mcr.microsoft.com/azure-storage/azurite@sha256:2628ee10a72833cc344b9d194cd8b245543892b307d16cf26a2cf55a15b816af"
    restart: always
    ports:
      - 10000:10000
      - 10001:10001
      - 10002:10002
    networks:
      - infra


volumes:
  prometheus_data: { }
  grafana_data: { }
networks:
  infra:
    driver: bridge
