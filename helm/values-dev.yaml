microservice-chart:
  namespace: "fdr"
  nameOverride: ""
  fullnameOverride: ""
  image:
    repository: pagopadcommonacr.azurecr.io/pagopafdr
    tag: 0.0.0-SNAPSHOT
    pullPolicy: Always
  readinessProbe:
    httpGet:
      path: /q/health/ready
      port: 8080
    initialDelaySeconds: 1
    failureThreshold: 10
    periodSeconds: 2
  livenessProbe:
    httpGet:
      path: /q/health/live
      port: 8080
    initialDelaySeconds: 1
    failureThreshold: 10
    periodSeconds: 2
  envConfig:
    APP_ENVIRONMENT: "dev"
    TZ: "Europe/Rome"
  envFieldRef:
    APP_NAME: "metadata.labels['app.kubernetes.io/instance']"
    APP_VERSION: "metadata.labels['app.kubernetes.io/version']"
  deployment:
    create: true
  service:
    create: true
    type: ClusterIP
    ports:
      - 8080
  ingress:
    create: true
    host: "weudev.fdr.internal.dev.platform.pagopa.it"
    path: /pagopa-fdr-service(/|$)(.*)
    pathType: Prefix
    servicePort: 8080
    rewriteTarget: /$2
  serviceAccount:
    create: false
  securityContext:
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - all
  resources:
    requests:
      memory: "2Gi"
      cpu: "200m"
    limits:
      memory: "3Gi"
      cpu: "400m"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 2
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          type: Utilization
          value: "75"
      - type: memory
        metadata:
          type: Utilization
          value: "75"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
  serviceMonitor:
    create: true
    endpoints:
      - interval: 5s
        targetPort: 8080
        path: /q/metrics
