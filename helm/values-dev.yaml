microservice-chart: &microservice-chart
  namespace: "fdr"
  image:
    repository: ghcr.io/pagopa/pagopa-fdr
    tag: 1.1.61-8-try-to-optimize
    pullPolicy: Always
  readinessProbe:
    httpGet:
      path: /q/health/ready
      port: 8080
    initialDelaySeconds: 10
    failureThreshold: 10
    periodSeconds: 5
  livenessProbe:
    httpGet:
      path: /q/health/live
      port: 8080
    initialDelaySeconds: 10
    failureThreshold: 10
    periodSeconds: 5
  deployment: &deployment
    strategy:
      type: RollingUpdate
      rollingUpdate:
        maxSurge: 1
        maxUnavailable: 0
  serviceMonitor:
    create: true
    endpoints:
      - interval: 5s
        targetPort: 8080
        path: /q/metrics
  ports:
    - 12345 #jmx-exporter
    - 8080
  service:
    type: ClusterIP
    ports:
      - 8080
      - 12345 #jmx-exporter
  ingress: &ingress
    create: true
    host: "weudev.fdr.internal.dev.platform.pagopa.it"
    path: /pagopa-fdr-service/(.*)
    servicePort: 8080
  serviceAccount:
    name: "fdr-workload-identity"
  azure:
    workloadIdentityClientId: <workload-identity-client-id-set-automatically-by-gha>
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
  resources: &resources
    requests:
      memory: "1Gi"
      cpu: "400m"
    limits:
      memory: "3Gi"
      cpu: "800m"
  autoscaling: &autoscaling
    enable: false
  envConfig: &envConfig
    APP_ENVIRONMENT: "dev"
    TZ: "Europe/Rome"
    OTEL_ENDPOINT: "http://otel-collector.elastic-system.svc.cluster.local:4317"
    OTEL_TRACES_SAMPLER: "traceidratio"
    OTEL_TRACES_SAMPLER_ARG: "0.5"
    QUARKUS_OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=dev"
    QUARKUS_OTEL_SERVICE_NAME: "pagopa-fdr"
    LOG_LEVEL: "INFO"
    ADAPTER_API_CONFIG_CACHE_URL: "https://api.dev.platform.pagopa.it/api-config-cache/p/v1"
    ADAPTER_API_CONFIG_CACHE_CRON: "0 */1 * * * ?"
    BLOB_RE_CONTAINER_NAME: "re-payload"
    DATASOURCE_URL: "jdbc:postgresql://fdr-db.d.internal.postgresql.pagopa.it:5432/fdr3?sslmode=require&prepareThreshold=0"
    DATASOURCE_USERNAME: "fdr3"
    DATASOURCE_POOL_SIZE: "20"
    CUSTOM_JAVA_OPTS: "-XX:+UnlockExperimentalVMOptions -XX:+PrintFlagsFinal -XshowSettings:vm -XX:+UseContainerSupport -XX:InitialRAMPercentage=30 -XX:MaxRAMPercentage=80 -XX:MinHeapFreeRatio=30 -XX:MaxHeapFreeRatio=30"
    RE_ACTIONS_EXCLUDED_FROM_SAVE: "GET_ALL_FDR,INTERNAL_CREATE_FLOW,INTERNAL_ADD_PAYMENT,INTERNAL_DELETE_PAYMENT,INTERNAL_PUBLISH,INTERNAL_DELETE_FLOW"
  envFieldRef: &envFieldRef
    APP_NAME: "metadata.labels['app.kubernetes.io/instance']"
    APP_VERSION: "metadata.labels['app.kubernetes.io/version']"
  envSecret: &envSecret
    ADAPTER_API_CONFIG_CACHE_API_KEY: "api-config-cache-subscription-key-string"
    OTEL_AUTH_BEARER: "otel-auth-bearer"
    DATASOURCE_PASSWORD: "db-fdr3-password"
    BLOB_FDR_CONNECTION_STRING: "fdr-sa-connection-string"
    BLOB_RE_CONNECTION_STRING: "fdr-re-sa-connection-string"
    MONGO_CONNECTION_STRING: "mongodb-re-connection-string"
  keyvault:
    name: "pagopa-d-fdr-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  nodeSelector: {}
  tmpVolumeMount:
    create: true
  tolerations:
    - key: dedicated
      operator: Equal
      value: "nodo"
      effect: NoSchedule
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: nodo
                operator: In
                values:
                  - "true"
  canaryDelivery:
    create: false
# Configuration for standard application
core:
  !!merge <<: *microservice-chart
  ingress:
    !!merge <<: *ingress
    path: /pagopa-fdr-service-core/(.*)
  deployment:
    !!merge <<: *deployment
  autoscaling:
    !!merge <<: *autoscaling
    enable: true
    minReplica: 1
    maxReplica: 2
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    advanced:
      restoreToOriginalReplicaCount: false
    triggers:
      - type: cpu
        metadata:
          type: Utilization
          value: "90"
      - type: memory
        metadata:
          type: Utilization
          value: "90"
  resources:
    !!merge <<: *resources
  envConfig:
    !!merge <<: *envConfig
    SCHEDULE_HISTORY_CRON: "off"
    QUARKUS_HIBERNATE_ORM_LOG_SQL: "false"
    HIBERNATE_BATCH_SIZE: 500
  envFieldRef:
    !!merge <<: *envFieldRef
  envSecret:
    !!merge <<: *envSecret
# Configuration for CronJob scheduler
scheduler:
  !!merge <<: *microservice-chart
  ingress:
    !!merge <<: *ingress
    create: false
  deployment:
    !!merge <<: *deployment
    replicas: 1
  autoscaling:
    !!merge <<: *autoscaling
  resources:
    !!merge <<: *resources
    requests:
      memory: "1Gi"
      cpu: "200m"
    limits:
      memory: "2Gi"
      cpu: "800m"
  envConfig:
    !!merge <<: *envConfig
    SCHEDULE_HISTORY_CRON: "0 */5 * * * ?"
    SCHEDULE_HISTORY_SIZE: "300"
    SCHEDULE_HISTORY_RETRIES: "3"
    SCHEDULE_HISTORY_LOCK_DURATION: "1h"
    SCHEDULE_THREAD_MAX_TIMEOUT: "3600"
    SCHEDULE_HISTORY_PAYMENT_PAGE_SIZE: "10000"
  envFieldRef:
    !!merge <<: *envFieldRef
  envSecret:
    !!merge <<: *envSecret
