microservice-chart:
  namespace: "fdr"
  nameOverride: ""
  fullnameOverride: ""
  image:
    repository: ghcr.io/pagopa/pagopa-fdr
    tag: 1.0.4-1-cronjob_refresh
    pullPolicy: Always
  readinessProbe:
    httpGet:
      path: /q/health/ready
      port: 8080
    initialDelaySeconds: 10
    failureThreshold: 10
    periodSeconds: 5
  livenessProbe:
    httpGet:
      path: /q/health/live
      port: 8080
    initialDelaySeconds: 10
    failureThreshold: 10
    periodSeconds: 5
  envConfig:
    APP_ENVIRONMENT: "dev"
    TZ: "Europe/Rome"
    OTEL_ENDPOINT: "http://otel-collector.elastic-system.svc.cluster.local:4317"
    ADAPTER_API_CONFIG_CACHE_URL: "https://api.dev.platform.pagopa.it/api-config-cache/o/v1"
    QUEUE_CONVERSION_NAME: "flowidsendqueue"
    EVENT_HUB_RE_NAME: "fdr-re"
    BLOB_RE_CONTAINER_NAME: "payload"
  envFieldRef:
    APP_NAME: "metadata.labels['app.kubernetes.io/instance']"
    APP_VERSION: "metadata.labels['app.kubernetes.io/version']"
  secretProvider:
    create: true
    envSecrets:
      ADAPTER_API_CONFIG_CACHE_API_KEY: "api-config-cache-subscription-key-string"
      OTEL_AUTH_BEARER: "otel-auth-bearer"
      MONGODB_CONNECTION_STRING: "mongodb-connection-string"
      QUEUE_CONVERSION_CONNECTION_STRING: "fdr-sa-connection-string"
      EVENT_HUB_RE_CONNECTION_STRING: "azure-event-hub-re-connection-string"
      BLOB_RE_CONNECTION_STRING: "fdr-re-sa-connection-string"
    keyvault:
      name: "pagopa-d-fdr-kv"
      tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  tmpVolumeMount:
    create: true
  resources:
    requests:
      memory: "2Gi"
      cpu: "400m"
    limits:
      memory: "3Gi"
      cpu: "800m"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 2
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          type: Utilization
          value: "75"
      - type: memory
        metadata:
          type: Utilization
          value: "75"
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
  serviceMonitor:
    create: true
    endpoints:
      - interval: 5s
        targetPort: 8080
        path: /q/metrics
  service:
    create: true
  ingress:
    create: true
    host: "weudev.fdr.internal.dev.platform.pagopa.it"
    path: /pagopa-fdr-service(/|$)(.*)
  canaryDelivery:
    create: false
cj-refresh-configuration:
  namespace: "fdr"
  schedule: "28 * * * *"
  image:
    repository: "curlimages/curl"
    tag: "latest"
    pullPolicy: "Always"
  command: ["/bin/sh", "-c"]
  args:
    - set -e echo "Starting..."; export URL="http://cache-oracle.apiconfig.svc.cluster.local:8080/stakeholders/fdr/cache/schemas/v1?refresh=true&keys=creditorInstitutions,creditorInstitutionBrokers,stations,creditorInstitutionStations,psps,pspBrokers,channels,ftpServers,configurations,gdeConfigurations,paymentTypes,pspChannelPaymentTypes"; echo "Call $URL"; curl -m 300 $URL; echo "Done";" export URL="http://cache-postgresql.apiconfig.svc.cluster.local:8080/stakeholders/fdr/cache/schemas/v1?refresh=true&keys=creditorInstitutions,creditorInstitutionBrokers,stations,creditorInstitutionStations,psps,pspBrokers,channels,ftpServers,configurations,gdeConfigurations,paymentTypes,pspChannelPaymentTypes"; echo "Call $URL"; curl -m 300 $URL; echo "Done";"
  resources:
    requests:
      memory: "256Mi"
      cpu: "100m"
    limits:
      memory: "512Mi"
      cpu: "150m"
  tolerations:
    - key: dedicated
      operator: Equal
      value: "nodo-cron"
      effect: NoSchedule
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: nodo-cron
                operator: In
                values:
                  - "true"
