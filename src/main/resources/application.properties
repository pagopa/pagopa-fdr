###################
## CUSTOM
###################
app.name=${QUARKUS_OTEL_SERVICE_NAME:pagopafdr}
app.version=${APP_VERSION:0.0.0-SNAPSHOT}
app.environment=${APP_ENVIRONMENT:local}
###################
## COMMON OVERRIDE
###################
quarkus.native.additional-build-args=-H:ResourceConfigurationFiles=resources-config.json
quarkus.default-locale=it-IT
quarkus.locales=it-IT
###################
## LOG
###################
quarkus.log.file.json=false
quarkus.log.level=INFO
quarkus.log.category."it.gov.pagopa.fdr".level=${LOG_LEVEL:INFO}
%dev.quarkus.log.console.json=false
%test.quarkus.log.console.json=false
%openapi_internal.quarkus.log.console.json=false
%openapi_psp.quarkus.log.console.json=false
%openapi_organization.quarkus.log.console.json=false
quarkus.log.console.json.additional-field."service.name".value=${app.name}
quarkus.log.console.json.additional-field."service.version".value=${app.version}
quarkus.log.console.json.additional-field."service.environment".value=${app.environment}
###################
## OPENTELEMETRY
###################
quarkus.otel.enabled=true
quarkus.otel.metrics.enabled=true
%dev.quarkus.otel.enabled=false
%test.quarkus.otel.enabled=false
%openapi_internal.quarkus.otel.enabled=false
%openapi_psp.quarkus.otel.enabled=false
%openapi_organization.quarkus.otel.enabled=false
quarkus.otel.exporter.otlp.endpoint=${OTEL_ENDPOINT:http://localhost:4317}
quarkus.otel.exporter.otlp.headers=${OTEL_AUTH_BEARER:Authorization=Bearer my-token}
%docker.quarkus.otel.exporter.otlp.endpoint=http://otel-collector:4317
%docker.quarkus.otel.exporter.otlp.headers=Authorization=Bearer my-token
quarkus.otel.traces.sampler=${OTEL_TRACES_SAMPLER:traceidratio}
quarkus.otel.traces.sampler.arg=${OTEL_TRACES_SAMPLER_ARG:0.5}
#quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{3.}] (%t) %s%e%n
###################
## DATABASE
###################
quarkus.datasource.db-kind=postgresql
quarkus.datasource.username=${DATASOURCE_USERNAME}
quarkus.datasource.jdbc.url=${DATASOURCE_URL}
quarkus.datasource.password=${DATASOURCE_PASSWORD}
quarkus.datasource.jdbc.max-size=${DATASOURCE_POOL_SIZE}
%dev.quarkus.datasource.jdbc.max-size=20

### Optimization
quarkus.hibernate-orm.jdbc.batch_size=100
quarkus.hibernate-orm.order_inserts=true
quarkus.hibernate-orm.order_updates=true

### TODO SQL LOG TO REMOVE
# Log delle query SQL
#quarkus.hibernate-orm.log.sql=true
#quarkus.hibernate-orm.format-sql=true

# Log dei parametri SQL
#quarkus.log.category."org.hibernate.type.descriptor.sql".level=TRACE

# Log completo anche per insert/update/delete
#quarkus.log.category."org.hibernate.SQL".level=DEBUG

###################
## ADAPTER API CONFIG CACHE
###################
startconfig.enabled=true
#%openapi.startconfig.enabled=false
%openapi_internal.startconfig.enabled=false
%openapi_psp.startconfig.enabled=false
%openapi_organization.startconfig.enabled=false
adapter.api_config_cache.api-key-name=Ocp-Apim-Subscription-Key
adapter.api_config_cache.api-key-value=${ADAPTER_API_CONFIG_CACHE_API_KEY:12345}
adapter.api_config_cache.url=${ADAPTER_API_CONFIG_CACHE_URL:${quarkus.mockserver.endpoint}}
#%openapi.adapter.api_config_cache.url=na
%openapi_internal.adapter.api_config_cache.url=na
%openapi_psp.adapter.api_config_cache.url=na
%openapi_organization.adapter.api_config_cache.url=na
###################
## SCHEDULER
###################
%test.quarkus.scheduler.enabled=false
#%openapi.quarkus.scheduler.enabled=false
%openapi_internal.quarkus.scheduler.enabled=false
%openapi_psp.quarkus.scheduler.enabled=false
%openapi_organization.quarkus.scheduler.enabled=false
# By default, the syntax used for cron expressions is based on Quartz - https://www.quartz-scheduler.org/documentation/quartz-2.3.0/tutorials/crontrigger.html
# You can change the syntax using the following property:
# quarkus.scheduler.cron-type=unix
api_config_cache.cron.expr=${ADAPTER_API_CONFIG_CACHE_CRON:*/15 * * * * ?}
###################
## OPENAPI FILTER
###################
#operations.filter=".*"
%openapi_internal.operations.filter=/internal/.*
%openapi_internal.mp.openapi.filter=it.gov.pagopa.fdr.controller.middleware.filter.NoInternalSchemaFilter
%openapi_psp.operations.filter=/(info|psps/).*
%openapi_psp.mp.openapi.filter=it.gov.pagopa.fdr.controller.middleware.filter.NoInternalSchemaFilter
%openapi_organization.operations.filter=/(info|organizations/).*
%openapi_organization.mp.openapi.filter=it.gov.pagopa.fdr.controller.middleware.filter.NoInternalSchemaFilter
##############
# MOCK SERVER
##############
%dev.quarkus.mockserver.devservices.config-file=src/test/resources/mockserver.properties
%dev.quarkus.mockserver.devservices.config-dir=src/test/resources/mockserver
%dev.quarkus.mockserver.devservices.log=false
%dev.quarkus.mockserver.devservices.enabled=false
%dev.quarkus.mongodb.devservices.enabled=false
%test.quarkus.mockserver.devservices.config-file=src/test/resources/mockserver.properties
%test.quarkus.mockserver.devservices.config-dir=src/test/resources/mockserver
%test.quarkus.mockserver.devservices.log=false
##############
# Registro Eventi
##############
quarkus.mongodb.connection-string=${MONGO_CONNECTION_STRING}
%test.quarkus.mongodb.connection-string=mongodb://localhost:27017
quarkus.mongodb.database=fdr-re
blob.re.connect-str=${BLOB_RE_CONNECTION_STRING}
%test.blob.re.connect-str=fake
blob.re.name=re-payload
registro-eventi.exclude-from-save.actions=${RE_ACTIONS_EXCLUDED_FROM_SAVE}
%dev.registro-eventi.exclude-from-save.actions="GET_ALL_FDR,INTERNAL_CREATE_FLOW,INTERNAL_ADD_PAYMENT,INTERNAL_DELETE_PAYMENT,INTERNAL_PUBLISH,INTERNAL_DELETE_FLOW"
%test.registro-eventi.exclude-from-save.actions="GET_ALL_FDR,INTERNAL_CREATE_FLOW,INTERNAL_ADD_PAYMENT,INTERNAL_DELETE_PAYMENT,INTERNAL_PUBLISH,INTERNAL_DELETE_FLOW"
##############
# Blob Storage
##############
blob.history.connect-str=${BLOB_FDR_CONNECTION_STRING:fake}
%test.blob.history.connect-str=fake
blob.history.containername=fdr3-flows
##############
# Scheduler
##############
schedule.history.cron=${SCHEDULE_HISTORY_CRON:off}
schedule.history.size=${SCHEDULE_HISTORY_SIZE:100}
schedule.history.retries=${SCHEDULE_HISTORY_RETRIES:3}
schedule.history.lock-duration=${SCHEDULE_HISTORY_LOCK_DURATION:1s}
############################
# Scheduler thread timeout #
############################
quarkus.vertx.max-worker-execute-time=${SCHEDULE_THREAD_MAX_TIMEOUT:3600}
#######################
# Scheduler page size #
#######################
# With a page size <= 1000 the connection with the db will close
schedule.history.payment-page-size=${SCHEDULE_HISTORY_PAYMENT_PAGE_SIZE:10000}