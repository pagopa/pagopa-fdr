quarkus.application.name=FDR
app.environment=${ENV:dev}

#log
quarkus.log.handler.gelf.enabled=true
quarkus.log.handler.gelf.host=logstash.elastic-system.svc.cluster.local
%dev.quarkus.log.handler.gelf.host=localhost
%test.quarkus.log.handler.gelf.host=localhost
%docker.quarkus.log.handler.gelf.host=logstash
quarkus.log.handler.gelf.port=12201
quarkus.log.handler.gelf.include-full-mdc=true
quarkus.log.handler.gelf.level=ALL
quarkus.log.handler.gelf.additional-field."app_name".value=FDR
quarkus.log.handler.gelf.additional-field."app_environment".value=${ENV:dev}
quarkus.log.handler.gelf.additional-field."app_version".value=${QUARKUS_APPLICATION_VERSION:0.0.0}

#telemetry
quarkus.opentelemetry.enabled=true
quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://otel-collector.elastic-system.svc.cluster.local:4317
quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer eyJhbGciOiJSUzI1NiIsImtpZCI6IjA0VlBnYVNzNGVsdDExY21KLXNZc2FFS1k5ZW4wb3htRklHNUR2UW10Z1UifQ
%dev.quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4317
%dev.quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer my-token
%test.quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://localhost:4317
%test.quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer my-token
%docker.quarkus.opentelemetry.tracer.exporter.otlp.endpoint=http://otel-collector:4317
%docker.quarkus.opentelemetry.tracer.exporter.otlp.headers=Authorization=Bearer my-token
#quarkus.log.console.format=%d{yyyy-MM-dd HH:mm:ss,SSS} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{3.}] (%t) %s%e%n

#swagger - openapi
quarkus.smallrye-openapi.info-title=FDR - Flussi di rendicontazione (${ENV:dev})
%dev.quarkus.smallrye-openapi.info-title=FDR - Flussi di rendicontazione (DEV)
%test.quarkus.smallrye-openapi.info-title=FDR - Flussi di rendicontazione (TEST)
%docker.quarkus.smallrye-openapi.info-title=FDR - Flussi di rendicontazione (DOCKER)
quarkus.smallrye-openapi.info-description=Questo microservizio è usato per storicizzare e servire i flussi di rendicontazione tra EC e PSP
quarkus.smallrye-openapi.info-terms-of-service=Your terms here
quarkus.smallrye-openapi.info-contact-email=techsupport@example.com
quarkus.smallrye-openapi.info-contact-name=Example API Support
quarkus.smallrye-openapi.info-contact-url=http://exampleurl.com/contact
quarkus.smallrye-openapi.info-license-name=Apache 2.0
quarkus.smallrye-openapi.info-license-url=https://www.apache.org/licenses/LICENSE-2.0.html

#database
#quarkus.datasource.db-kind = postgresql
#quarkus.datasource.username = admin
#quarkus.datasource.password = admin
#quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/fdr
quarkus.datasource.db-kind=h2
quarkus.datasource.username = admin
quarkus.datasource.password = admin
quarkus.datasource.jdbc.url=jdbc:h2:mem:fdr
%dev.quarkus.datasource.username = admin
%dev.quarkus.datasource.password = admin
%dev.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/fdr
%test.quarkus.datasource.username = admin
%test.quarkus.datasource.password = admin
%test.quarkus.datasource.jdbc.url = jdbc:postgresql://localhost:5432/fdr
%docker.quarkus.datasource.username = admin
%docker.quarkus.datasource.password = admin
%docker.quarkus.datasource.jdbc.url = jdbc:postgresql://postgres:5432/fdr
%dev.quarkus.hibernate-orm.database.generation = drop-and-create
%test.quarkus.hibernate-orm.database.generation = drop-and-create

